{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { instance } from \"./instance\";\nimport { makeAutoObservable } from \"mobx\";\n\nvar RequestStore = function RequestStore() {\n  var _this = this;\n\n  _classCallCheck(this, RequestStore);\n\n  this.requests = [];\n  this.loading = true;\n\n  this.fetchRequests = function _callee() {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/request\"));\n\n          case 3:\n            res = _context.sent;\n            _this.requests = res.data;\n            _this.loading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"requestStore --> fetchRequests\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.deleteRequest = function _callee2(requestId, navigation) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(instance.delete(\"/request/\" + requestId));\n\n          case 3:\n            _this.requests = _this.requests.filter(function (request) {\n              return request._id !== requestId;\n            });\n            toast.show({\n              title: \"Request Deleted\",\n              status: \"success\",\n              placement: \"top\"\n            });\n            navigation.navigate(\"Timeline\");\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.createRequest = function _callee3(newRequest, toast) {\n    var res;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(instance.post(\"/request\", newRequest));\n\n          case 3:\n            res = _context3.sent;\n\n            _this.requests.push(res.data);\n\n            toast.show({\n              title: \"Request Created\",\n              status: \"success\",\n              placement: \"top\"\n            });\n            _context3.next = 12;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"requestStore --> createRequest\", _context3.t0);\n            toast.show({\n              title: \"Try Again\",\n              status: \"error\",\n              description: \"Please try again to create a new request and make sure you are signed in.\",\n              placement: \"top\"\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.editRequest = function _callee4(requestId, updatedRequest, toast, navigation) {\n    var res;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(instance.put(\"/request/\" + requestId, updatedRequest));\n\n          case 3:\n            res = _context4.sent;\n            _this.requests = _this.requests.map(function (request) {\n              return request._id === requestId ? res.data : request;\n            });\n            toast.show({\n              title: \"Request Updated\",\n              status: \"success\",\n              placement: \"top\"\n            });\n            navigation.navigate(\"Timeline\");\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"requestStore --> editRequest\", _context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar requestStore = new RequestStore();\nrequestStore.fetchRequests();\nexport default requestStore;","map":{"version":3,"sources":["C:/Users/fahad/Development/FE_bloodDonation/stores/requestStore.js"],"names":["instance","makeAutoObservable","RequestStore","requests","loading","fetchRequests","get","res","data","console","log","deleteRequest","requestId","navigation","delete","filter","request","_id","toast","show","title","status","placement","navigate","createRequest","newRequest","post","push","description","editRequest","updatedRequest","put","map","requestStore"],"mappings":"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","sourcesContent":["import { instance } from \"./instance\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\nclass RequestStore {\r\n  requests = [];\r\n  loading = true;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fetchRequests = async () => {\r\n    try {\r\n      const res = await instance.get(\"/request\");\r\n      this.requests = res.data;\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.log(\"requestStore --> fetchRequests\", error);\r\n    }\r\n  };\r\n\r\n  deleteRequest = async (requestId, navigation) => {\r\n    try {\r\n      await instance.delete(`/request/${requestId}`);\r\n      this.requests = this.requests.filter(\r\n        (request) => request._id !== requestId\r\n      );\r\n      toast.show({\r\n        title: \"Request Deleted\",\r\n        status: \"success\",\r\n        placement: \"top\",\r\n      });\r\n      navigation.navigate(\"Timeline\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  createRequest = async (newRequest, toast) => {\r\n    try {\r\n      const res = await instance.post(\"/request\", newRequest);\r\n      this.requests.push(res.data);\r\n      toast.show({\r\n        title: \"Request Created\",\r\n        status: \"success\",\r\n        placement: \"top\",\r\n      });\r\n    } catch (error) {\r\n      console.log(\"requestStore --> createRequest\", error);\r\n      toast.show({\r\n        title: \"Try Again\",\r\n        status: \"error\",\r\n        description:\r\n          \"Please try again to create a new request and make sure you are signed in.\",\r\n        placement: \"top\",\r\n      });\r\n    }\r\n  };\r\n\r\n  editRequest = async (requestId, updatedRequest, toast, navigation) => {\r\n    try {\r\n      const res = await instance.put(`/request/${requestId}`, updatedRequest);\r\n      this.requests = this.requests.map((request) =>\r\n        request._id === requestId ? res.data : request\r\n      );\r\n      toast.show({\r\n        title: \"Request Updated\",\r\n        status: \"success\",\r\n        placement: \"top\",\r\n      });\r\n      navigation.navigate(\"Timeline\");\r\n    } catch (error) {\r\n      console.log(\"requestStore --> editRequest\", error);\r\n    }\r\n  };\r\n}\r\n\r\nconst requestStore = new RequestStore();\r\nrequestStore.fetchRequests();\r\nexport default requestStore;\r\n"]},"metadata":{},"sourceType":"module"}