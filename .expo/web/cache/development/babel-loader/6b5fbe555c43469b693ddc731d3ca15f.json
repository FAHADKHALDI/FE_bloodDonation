{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { observer } from \"mobx-react\";\nimport { Button, Modal, FormControl, Input, NativeBaseProvider, Select, VStack, CheckIcon, useToast } from \"native-base\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Text } from \"../assets\";\nimport authStore from \"../stores/authStore\";\n\nvar EditProfileModal = function EditProfileModal() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(authStore.user ? authStore.user : \"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateProfile = _useState4[0],\n      setUpdatedProfile = _useState4[1];\n\n  var handleSubmit = function handleSubmit() {\n    authStore.editUser(updateProfile._id, updateProfile, toast);\n    setShowModal(false);\n  };\n\n  var toast = useToast();\n  return React.createElement(React.Fragment, null, React.createElement(Pressable, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#ffff\",\n      alignSelf: \"center\",\n      textAlignVertical: \"center\",\n      fontSize: 20\n    }\n  }, \"Edit Profile\")), authStore.user && React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\"\n  }, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Edit Profile\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Name\"), React.createElement(Input, {\n    placeholder: \"Enter Your Name\",\n    defaultValue: authStore.user.name,\n    onChangeText: function onChangeText(name) {\n      return setUpdatedProfile(_objectSpread(_objectSpread({}, updateProfile), {}, {\n        name: name\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Blood Type\"), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    minWidth: \"200\",\n    accessibilityLabel: \"Choose Blood Type\",\n    placeholder: \"Choose Blood Type\",\n    defaultValue: authStore.user.bloodType,\n    onChangeText: function onChangeText(bloodType) {\n      return setUpdatedProfile(_objectSpread(_objectSpread({}, updateProfile), {}, {\n        bloodType: bloodType\n      }));\n    },\n    _selectedItem: {\n      bg: \"teal.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: \"5\"\n      })\n    },\n    mt: 1\n  }, React.createElement(Select.Item, {\n    label: \"A+\",\n    value: \"A+\"\n  }), React.createElement(Select.Item, {\n    label: \"A-\",\n    value: \"A-\"\n  }), React.createElement(Select.Item, {\n    label: \"B+\",\n    value: \"B+\"\n  }), React.createElement(Select.Item, {\n    label: \"B-\",\n    value: \"B-\"\n  }), React.createElement(Select.Item, {\n    label: \"O+\",\n    value: \"O+\"\n  }), React.createElement(Select.Item, {\n    label: \"O-\",\n    value: \"O-\"\n  }), React.createElement(Select.Item, {\n    label: \"AB+\",\n    value: \"AB+\"\n  }), React.createElement(Select.Item, {\n    label: \"AB-\",\n    value: \"AB-\"\n  })))), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Civil ID\"), React.createElement(Input, {\n    placeholder: \"Enter Civil ID\",\n    defaultValue: authStore.user.civilId,\n    onChangeText: function onChangeText(civilId) {\n      return setUpdatedProfile(_objectSpread(_objectSpread({}, updateProfile), {}, {\n        civilId: civilId\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Age\"), React.createElement(Input, {\n    placeholder: \"Enter Your Age\",\n    defaultValue: authStore.user.age,\n    onChangeText: function onChangeText(age) {\n      return setUpdatedProfile(_objectSpread(_objectSpread({}, updateProfile), {}, {\n        age: age\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Phone Number\"), React.createElement(Input, {\n    placeholder: \"Enter Phone Number\",\n    defaultValue: authStore.user.phone,\n    onChangeText: function onChangeText(phone) {\n      return setUpdatedProfile(_objectSpread(_objectSpread({}, updateProfile), {}, {\n        phone: phone\n      }));\n    }\n  }))), React.createElement(Modal.Footer, null, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"red\",\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    style: {\n      backgroundColor: \"#D91C1F\"\n    },\n    onPress: handleSubmit\n  }, \"Submit\"))))));\n};\n\nexport default observer(EditProfileModal);\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/bandaralmutairi/Desktop/Hayat project/FE_bloodDonation/Profile/EditProfileModal.js"],"names":["observer","Button","Modal","FormControl","Input","NativeBaseProvider","Select","VStack","CheckIcon","useToast","React","useState","Text","authStore","EditProfileModal","showModal","setShowModal","user","updateProfile","setUpdatedProfile","handleSubmit","editUser","_id","toast","color","alignSelf","textAlignVertical","fontSize","name","bloodType","bg","endIcon","civilId","age","phone","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react\";\nimport {\n  Button,\n  Modal,\n  FormControl,\n  Input,\n  NativeBaseProvider,\n  Select,\n  VStack,\n  CheckIcon,\n  useToast,\n} from \"native-base\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Pressable } from \"react-native\";\nimport { Text } from \"../assets\";\nimport authStore from \"../stores/authStore\";\n\nconst EditProfileModal = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const [updateProfile, setUpdatedProfile] = useState(\n    authStore.user ? authStore.user : \"\"\n  );\n\n  const handleSubmit = () => {\n    authStore.editUser(updateProfile._id, updateProfile, toast);\n    setShowModal(false);\n  };\n\n  const toast = useToast();\n\n  return (\n    <>\n      <Pressable onPress={() => setShowModal(true)}>\n        <Text\n          style={{\n            color: \"#ffff\",\n            alignSelf: \"center\",\n            textAlignVertical: \"center\",\n            fontSize: 20,\n          }}\n        >\n          Edit Profile\n        </Text>\n      </Pressable>\n      {authStore.user && (\n        <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n          <Modal.Content maxWidth=\"400px\">\n            <Modal.CloseButton />\n            <Modal.Header>Edit Profile</Modal.Header>\n            <Modal.Body>\n              <FormControl>\n                <FormControl.Label>Name</FormControl.Label>\n                <Input\n                  placeholder=\"Enter Your Name\"\n                  defaultValue={authStore.user.name}\n                  onChangeText={(name) =>\n                    setUpdatedProfile({ ...updateProfile, name })\n                  }\n                />\n              </FormControl>\n              <FormControl mt=\"3\">\n                <FormControl.Label>Blood Type</FormControl.Label>\n                <VStack alignItems=\"center\" space={4}>\n                  <Select\n                    minWidth=\"200\"\n                    accessibilityLabel=\"Choose Blood Type\"\n                    placeholder=\"Choose Blood Type\"\n                    defaultValue={authStore.user.bloodType}\n                    onChangeText={(bloodType) =>\n                      setUpdatedProfile({ ...updateProfile, bloodType })\n                    }\n                    _selectedItem={{\n                      bg: \"teal.600\",\n                      endIcon: <CheckIcon size=\"5\" />,\n                    }}\n                    mt={1}\n                  >\n                    <Select.Item label=\"A+\" value=\"A+\" />\n                    <Select.Item label=\"A-\" value=\"A-\" />\n                    <Select.Item label=\"B+\" value=\"B+\" />\n                    <Select.Item label=\"B-\" value=\"B-\" />\n                    <Select.Item label=\"O+\" value=\"O+\" />\n                    <Select.Item label=\"O-\" value=\"O-\" />\n                    <Select.Item label=\"AB+\" value=\"AB+\" />\n                    <Select.Item label=\"AB-\" value=\"AB-\" />\n                  </Select>\n                </VStack>\n              </FormControl>\n              <FormControl mt=\"3\">\n                <FormControl.Label>Civil ID</FormControl.Label>\n                <Input\n                  placeholder=\"Enter Civil ID\"\n                  defaultValue={authStore.user.civilId}\n                  onChangeText={(civilId) =>\n                    setUpdatedProfile({ ...updateProfile, civilId })\n                  }\n                />\n              </FormControl>\n              <FormControl mt=\"3\">\n                <FormControl.Label>Age</FormControl.Label>\n                <Input\n                  placeholder=\"Enter Your Age\"\n                  defaultValue={authStore.user.age}\n                  onChangeText={(age) =>\n                    setUpdatedProfile({ ...updateProfile, age })\n                  }\n                />\n              </FormControl>\n              <FormControl mt=\"3\">\n                <FormControl.Label>Phone Number</FormControl.Label>\n                <Input\n                  placeholder=\"Enter Phone Number\"\n                  defaultValue={authStore.user.phone}\n                  onChangeText={(phone) =>\n                    setUpdatedProfile({ ...updateProfile, phone })\n                  }\n                />\n              </FormControl>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button.Group space={2}>\n                <Button\n                  variant=\"ghost\"\n                  colorScheme=\"red\"\n                  onPress={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  style={{ backgroundColor: \"#D91C1F\" }}\n                  onPress={handleSubmit}\n                >\n                  Submit\n                </Button>\n              </Button.Group>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default observer(EditProfileModal);\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}