{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { observer } from \"mobx-react\";\nimport { ScrollView, View } from \"native-base\";\nimport React, { useState } from \"react\";\nimport { Button, Center, HStack } from \"native-base\";\nimport RequestItem from \"./RequestItem\";\nimport SearchBar from \"../Search/SearchBar\";\nimport RequestStore from \"../../stores/requestStore\";\n\nvar RequestsList = function RequestsList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isUrgent = _useState4[0],\n      setisUrgent = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      donated = _useState6[0],\n      setDonated = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bloodType = _useState8[0],\n      setBloodType = _useState8[1];\n\n  var requestList = RequestStore.requests.filter(function (request) {\n    return request.requests.toLowerCase().includes(query.toLowerCase());\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filteredUrgent = RequestStore.requests.filter(function (request) {\n    return request.priority === \"URGENT\";\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filterDonated = RequestStore.requests.filter(function (request) {\n    return request.donate === true;\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filterBlood = RequestStore.requests.filter(function (request) {\n    return request.bloodType === bloodType;\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  return React.createElement(View, null, React.createElement(HStack, null, React.createElement(Button, {\n    h: \"7\",\n    w: \"20\",\n    variant: \"outline\",\n    colorScheme: \"secondary\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3,\n    marginBottom: 3,\n    onPress: function onPress() {\n      return setisUrgent(!isUrgent);\n    }\n  }, \"Priority\"), React.createElement(Button, {\n    h: \"7\",\n    w: \"20\",\n    variant: \"outline\",\n    colorScheme: \"secondary\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3,\n    marginBottom: 3,\n    marginRight: 1,\n    onPress: function onPress() {\n      return setDonated(!donated);\n    }\n  }, \"Donated\"), React.createElement(ScrollView, {\n    horizontal: true\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"\");\n    },\n    h: \"7\",\n    w: \"20\",\n    variant: \"outline\",\n    colorScheme: \"secondary\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3,\n    marginBottom: 3\n  }, \"Show All\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"A+\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"A+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"A-\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"A-\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"B+\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"B+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"B-\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"B-\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"O+\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"O+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"O-\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"O-\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"AB+\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"AB+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"AB-\");\n    },\n    h: \"7\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3,\n    marginRight: 3\n  }, \"AB-\"))), React.createElement(SearchBar, {\n    setQuery: setQuery\n  }), React.createElement(ScrollView, null, isUrgent ? filteredUrgent : donated ? filterDonated : bloodType ? filterBlood : requestList));\n};\n\nexport default observer(RequestsList);","map":{"version":3,"sources":["/Users/bandaralmutairi/Desktop/Hayat project/FE_bloodDonation/components/Requests/RequestsList.js"],"names":["observer","ScrollView","View","React","useState","Button","Center","HStack","RequestItem","SearchBar","RequestStore","RequestsList","navigation","query","setQuery","isUrgent","setisUrgent","donated","setDonated","bloodType","setBloodType","requestList","requests","filter","request","toLowerCase","includes","map","_id","filteredUrgent","priority","filterDonated","donate","filterBlood"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react\";\nimport { ScrollView, View } from \"native-base\";\nimport React, { useState } from \"react\";\nimport { Button, Center, HStack } from \"native-base\";\n\n// Components\nimport RequestItem from \"./RequestItem\";\nimport SearchBar from \"../Search/SearchBar\";\n// Stores\nimport RequestStore from \"../../stores/requestStore\";\n\nconst RequestsList = ({ navigation }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const [isUrgent, setisUrgent] = useState(false);\n\n  const [donated, setDonated] = useState(false);\n\n  const [bloodType, setBloodType] = useState(\"\");\n\n  const requestList = RequestStore.requests\n    .filter((request) =>\n      request.requests.toLowerCase().includes(query.toLowerCase())\n    )\n    .map((request) => (\n      <RequestItem\n        request={request}\n        key={request._id}\n        navigation={navigation}\n      />\n    ));\n\n  const filteredUrgent = RequestStore.requests\n    .filter((request) => request.priority === \"URGENT\")\n    .map((request) => (\n      <RequestItem\n        request={request}\n        key={request._id}\n        navigation={navigation}\n      />\n    ));\n\n  const filterDonated = RequestStore.requests\n    .filter((request) => request.donate === true)\n    .map((request) => (\n      <RequestItem\n        request={request}\n        key={request._id}\n        navigation={navigation}\n      />\n    ));\n\n  const filterBlood = RequestStore.requests\n    .filter((request) => request.bloodType === bloodType)\n    .map((request) => (\n      <RequestItem\n        request={request}\n        key={request._id}\n        navigation={navigation}\n      />\n    ));\n\n  return (\n    <View>\n      <HStack>\n        <Button\n          h=\"7\"\n          w=\"20\"\n          variant=\"outline\"\n          colorScheme=\"secondary\"\n          rounded=\"md\"\n          shadow={3}\n          marginLeft={3}\n          marginBottom={3}\n          onPress={() => setisUrgent(!isUrgent)}\n        >\n          Priority\n        </Button>\n        <Button\n          h=\"7\"\n          w=\"20\"\n          variant=\"outline\"\n          colorScheme=\"secondary\"\n          rounded=\"md\"\n          shadow={3}\n          marginLeft={3}\n          marginBottom={3}\n          marginRight={1}\n          onPress={() => setDonated(!donated)}\n        >\n          Donated\n        </Button>\n\n        <ScrollView horizontal={true}>\n          <Button\n            onPress={() => setBloodType(\"\")}\n            h=\"7\"\n            w=\"20\"\n            variant=\"outline\"\n            colorScheme=\"secondary\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n            marginBottom={3}\n          >\n            Show All\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"A+\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n          >\n            A+\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"A-\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n          >\n            A-\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"B+\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n          >\n            B+\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"B-\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n          >\n            B-\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"O+\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n          >\n            O+\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"O-\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n          >\n            O-\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"AB+\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n          >\n            AB+\n          </Button>\n          <Button\n            onPress={() => setBloodType(\"AB-\")}\n            h=\"7\"\n            w=\"10\"\n            bg=\"#BA181B\"\n            rounded=\"md\"\n            shadow={3}\n            marginLeft={3}\n            marginRight={3}\n          >\n            AB-\n          </Button>\n        </ScrollView>\n      </HStack>\n      <SearchBar setQuery={setQuery} />\n      <ScrollView>\n        {isUrgent\n          ? filteredUrgent\n          : donated\n          ? filterDonated\n          : bloodType\n          ? filterBlood\n          : requestList}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default observer(RequestsList);\n"]},"metadata":{},"sourceType":"module"}