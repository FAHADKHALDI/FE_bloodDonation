{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { observer } from \"mobx-react\";\nimport { ScrollView, View } from \"native-base\";\nimport React, { useState } from \"react\";\nimport { Button, Center, HStack } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RequestItem from \"./RequestItem\";\nimport SearchBar from \"../Search/SearchBar\";\nimport RequestStore from \"../../stores/requestStore\";\n\nvar RequestsList = function RequestsList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isUrgent = _useState4[0],\n      setisUrgent = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      donated = _useState6[0],\n      setDonated = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bloodType = _useState8[0],\n      setBloodType = _useState8[1];\n\n  var requestList = RequestStore.requests.filter(function (request) {\n    return request.fileNumber.toLowerCase().includes(query.toLowerCase());\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filteredUrgent = RequestStore.requests.filter(function (request) {\n    return request.priority === \"URGENT\";\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filterDonated = RequestStore.requests.filter(function (request) {\n    return request.donate === true;\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filterBlood = RequestStore.requests.filter(function (request) {\n    return request.bloodType === bloodType;\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  return React.createElement(View, null, React.createElement(SearchBar, {\n    setQuery: setQuery\n  }), React.createElement(HStack, null, React.createElement(Button, {\n    style: styles.btn,\n    h: \"9\",\n    w: \"20\",\n    shadow: 3,\n    marginLeft: 3,\n    marginBottom: 1,\n    onPress: function onPress() {\n      return setisUrgent(!isUrgent);\n    }\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, isUrgent ? \"Back\" : \"Urgent\")), React.createElement(Button, {\n    style: styles.btn,\n    h: \"9\",\n    w: \"20\",\n    shadow: 3,\n    marginLeft: 3,\n    marginBottom: 1,\n    marginRight: 1,\n    onPress: function onPress() {\n      return setDonated(!donated);\n    }\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, donated ? \"Back\" : \"Donated\")), React.createElement(ScrollView, {\n    horizontal: true\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"\");\n    },\n    style: styles.btn,\n    h: \"9\",\n    w: \"20\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3,\n    marginBottom: 1\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \"ShowAll\")), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"A+\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"A+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"A-\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"A-\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"B+\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"B+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"B-\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"B-\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"O+\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"O+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"O-\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"O-\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"AB+\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3\n  }, \"AB+\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setBloodType(\"AB-\");\n    },\n    h: \"9\",\n    w: \"10\",\n    bg: \"#BA181B\",\n    rounded: \"md\",\n    shadow: 3,\n    marginLeft: 3,\n    marginRight: 3\n  }, \"AB-\"))), React.createElement(ScrollView, null, isUrgent ? filteredUrgent : donated ? filterDonated : bloodType ? filterBlood : requestList));\n};\n\nexport default observer(RequestsList);\nvar styles = StyleSheet.create({\n  btn: {\n    backgroundColor: \"#ffffff\",\n    borderWidth: 1,\n    borderColor: \"#BA181B\"\n  },\n  txt: {\n    color: \"#BA181B\"\n  }\n});","map":{"version":3,"sources":["C:/Users/fahad/Development/FE_bloodDonation/components/Requests/RequestsList.js"],"names":["observer","ScrollView","View","React","useState","Button","Center","HStack","RequestItem","SearchBar","RequestStore","RequestsList","navigation","query","setQuery","isUrgent","setisUrgent","donated","setDonated","bloodType","setBloodType","requestList","requests","filter","request","fileNumber","toLowerCase","includes","map","_id","filteredUrgent","priority","filterDonated","donate","filterBlood","styles","btn","txt","StyleSheet","create","backgroundColor","borderWidth","borderColor","color"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react\";\r\nimport { ScrollView, View } from \"native-base\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Center, HStack } from \"native-base\";\r\nimport { StyleSheet, Text } from \"react-native\";\r\n\r\n// Components\r\nimport RequestItem from \"./RequestItem\";\r\nimport SearchBar from \"../Search/SearchBar\";\r\n// Stores\r\nimport RequestStore from \"../../stores/requestStore\";\r\n\r\nconst RequestsList = ({ navigation }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const [isUrgent, setisUrgent] = useState(false);\r\n\r\n  const [donated, setDonated] = useState(false);\r\n\r\n  const [bloodType, setBloodType] = useState(\"\");\r\n\r\n  const requestList = RequestStore.requests\r\n    .filter((request) =>\r\n      request.fileNumber.toLowerCase().includes(query.toLowerCase())\r\n    )\r\n    .map((request) => (\r\n      <RequestItem\r\n        request={request}\r\n        key={request._id}\r\n        navigation={navigation}\r\n      />\r\n    ));\r\n\r\n  const filteredUrgent = RequestStore.requests\r\n    .filter((request) => request.priority === \"URGENT\")\r\n    .map((request) => (\r\n      <RequestItem\r\n        request={request}\r\n        key={request._id}\r\n        navigation={navigation}\r\n      />\r\n    ));\r\n\r\n  const filterDonated = RequestStore.requests\r\n    .filter((request) => request.donate === true)\r\n    .map((request) => (\r\n      <RequestItem\r\n        request={request}\r\n        key={request._id}\r\n        navigation={navigation}\r\n      />\r\n    ));\r\n\r\n  const filterBlood = RequestStore.requests\r\n    .filter((request) => request.bloodType === bloodType)\r\n    .map((request) => (\r\n      <RequestItem\r\n        request={request}\r\n        key={request._id}\r\n        navigation={navigation}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <View>\r\n      <SearchBar setQuery={setQuery} />\r\n      <HStack>\r\n        <Button\r\n          style={styles.btn}\r\n          h=\"9\"\r\n          w=\"20\"\r\n          shadow={3}\r\n          marginLeft={3}\r\n          marginBottom={1}\r\n          onPress={() => setisUrgent(!isUrgent)}\r\n        >\r\n          <Text style={styles.txt}>{isUrgent ? \"Back\" : \"Urgent\"}</Text>\r\n        </Button>\r\n        <Button\r\n          style={styles.btn}\r\n          h=\"9\"\r\n          w=\"20\"\r\n          shadow={3}\r\n          marginLeft={3}\r\n          marginBottom={1}\r\n          marginRight={1}\r\n          onPress={() => setDonated(!donated)}\r\n        >\r\n          <Text style={styles.txt}>{donated ? \"Back\" : \"Donated\"}</Text>\r\n        </Button>\r\n\r\n        <ScrollView horizontal={true}>\r\n          <Button\r\n            onPress={() => setBloodType(\"\")}\r\n            style={styles.btn}\r\n            h=\"9\"\r\n            w=\"20\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n            marginBottom={1}\r\n          >\r\n            <Text style={styles.txt}>ShowAll</Text>\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"A+\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n          >\r\n            A+\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"A-\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n          >\r\n            A-\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"B+\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n          >\r\n            B+\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"B-\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n          >\r\n            B-\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"O+\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n          >\r\n            O+\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"O-\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n          >\r\n            O-\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"AB+\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n          >\r\n            AB+\r\n          </Button>\r\n          <Button\r\n            onPress={() => setBloodType(\"AB-\")}\r\n            h=\"9\"\r\n            w=\"10\"\r\n            bg=\"#BA181B\"\r\n            rounded=\"md\"\r\n            shadow={3}\r\n            marginLeft={3}\r\n            marginRight={3}\r\n          >\r\n            AB-\r\n          </Button>\r\n        </ScrollView>\r\n      </HStack>\r\n\r\n      <ScrollView>\r\n        {isUrgent\r\n          ? filteredUrgent\r\n          : donated\r\n          ? filterDonated\r\n          : bloodType\r\n          ? filterBlood\r\n          : requestList}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default observer(RequestsList);\r\n\r\nconst styles = StyleSheet.create({\r\n  btn: {\r\n    backgroundColor: \"#ffffff\",\r\n    borderWidth: 1,\r\n    borderColor: \"#BA181B\",\r\n  },\r\n  txt: {\r\n    color: \"#BA181B\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}