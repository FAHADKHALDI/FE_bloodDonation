{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ActionSheet from 'react-native-actionsheet';\nimport { getUrl } from \"./url\";\n\nvar OpenMap = function (_Component) {\n  _inherits(OpenMap, _Component);\n\n  var _super = _createSuper(OpenMap);\n\n  function OpenMap() {\n    var _this;\n\n    _classCallCheck(this, OpenMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.openApp = function (index) {\n      var _this$props = _this.props,\n          apps = _this$props.apps,\n          latitude = _this$props.latitude,\n          longitude = _this$props.longitude,\n          title = _this$props.title;\n      var app = apps[index];\n\n      if (app) {\n        var lat = parseFloat(latitude);\n        var lng = parseFloat(longitude);\n        var url = getUrl(app, lat, lng, title || 'Location');\n\n        if (url) {\n          return Linking.openURL(url);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(OpenMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var apps = this.props.apps;\n\n      if (apps.length > 1) {\n        this.ActionSheet.show();\n      } else if (apps.length === 1) {\n        this.openApp(0);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          apps = _this$props2.apps,\n          cancelText = _this$props2.cancelText,\n          actionSheetTitle = _this$props2.actionSheetTitle,\n          actionSheetMessage = _this$props2.actionSheetMessage;\n      if (apps.length === 0) return null;\n      var options = apps.map(function (app) {\n        return app.title;\n      });\n      options.push(cancelText || 'Cancel');\n      return React.createElement(ActionSheet, {\n        ref: function ref(_ref) {\n          return _this2.ActionSheet = _ref;\n        },\n        options: options,\n        title: actionSheetTitle,\n        message: actionSheetMessage,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: options.length - 1,\n        onPress: this.openApp\n      });\n    }\n  }]);\n\n  return OpenMap;\n}(Component);\n\nexport { OpenMap as default };","map":{"version":3,"sources":["/Users/bandaralmutairi/Desktop/Hayat project/FE_bloodDonation/node_modules/react-native-open-map/src/ActionSheet.js"],"names":["React","Component","ActionSheet","getUrl","OpenMap","openApp","index","props","apps","latitude","longitude","title","app","lat","parseFloat","lng","url","Linking","openURL","length","show","cancelText","actionSheetTitle","actionSheetMessage","options","map","push","ref"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,MAAT;;IAEqBC,O;;;;;;;;;;;;;;;;UAWnBC,O,GAAU,UAACC,KAAD,EAAW;AACnB,wBAA6C,MAAKC,KAAlD;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,QAAd,eAAcA,QAAd;AAAA,UAAwBC,SAAxB,eAAwBA,SAAxB;AAAA,UAAmCC,KAAnC,eAAmCA,KAAnC;AACA,UAAMC,GAAG,GAAGJ,IAAI,CAACF,KAAD,CAAhB;;AAEA,UAAIM,GAAJ,EAAS;AACP,YAAMC,GAAG,GAAGC,UAAU,CAACL,QAAD,CAAtB;AACA,YAAMM,GAAG,GAAGD,UAAU,CAACJ,SAAD,CAAtB;AAEA,YAAMM,GAAG,GAAGb,MAAM,CAACS,GAAD,EAAMC,GAAN,EAAWE,GAAX,EAAgBJ,KAAK,IAAI,UAAzB,CAAlB;;AACA,YAAIK,GAAJ,EAAS;AACP,iBAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAhB,CAAP;AACD;AACF;AACF,K;;;;;;;WAvBD,6BAAoB;AAClB,UAAQR,IAAR,GAAiB,KAAKD,KAAtB,CAAQC,IAAR;;AAEA,UAAIA,IAAI,CAACW,MAAL,GAAc,CAAlB,EAAqB;AACnB,aAAKjB,WAAL,CAAiBkB,IAAjB;AACD,OAFD,MAEO,IAAIZ,IAAI,CAACW,MAAL,KAAgB,CAApB,EAAuB;AAC5B,aAAKd,OAAL,CAAa,CAAb;AACD;AACF;;;WAiBD,kBAAS;AAAA;;AACP,yBAAmE,KAAKE,KAAxE;AAAA,UAAQC,IAAR,gBAAQA,IAAR;AAAA,UAAca,UAAd,gBAAcA,UAAd;AAAA,UAA0BC,gBAA1B,gBAA0BA,gBAA1B;AAAA,UAA4CC,kBAA5C,gBAA4CA,kBAA5C;AAEA,UAAIf,IAAI,CAACW,MAAL,KAAgB,CAApB,EAAuB,OAAO,IAAP;AACvB,UAAMK,OAAO,GAAGhB,IAAI,CAACiB,GAAL,CAAS,UAACb,GAAD;AAAA,eAASA,GAAG,CAACD,KAAb;AAAA,OAAT,CAAhB;AACAa,MAAAA,OAAO,CAACE,IAAR,CAAaL,UAAU,IAAI,QAA3B;AAEA,aACE,oBAAC,WAAD;AACE,QAAA,GAAG,EAAE,aAACM,IAAD;AAAA,iBAAS,MAAI,CAACzB,WAAL,GAAmByB,IAA5B;AAAA,SADP;AAEE,QAAA,OAAO,EAAEH,OAFX;AAGE,QAAA,KAAK,EAAEF,gBAHT;AAIE,QAAA,OAAO,EAAEC,kBAJX;AAKE,QAAA,iBAAiB,EAAEC,OAAO,CAACL,MAAR,GAAiB,CALtC;AAME,QAAA,sBAAsB,EAAEK,OAAO,CAACL,MAAR,GAAiB,CAN3C;AAOE,QAAA,OAAO,EAAE,KAAKd;AAPhB,QADF;AAWD;;;;EA5CkCJ,S;;SAAhBG,O","sourcesContent":["import React, { Component } from 'react';\nimport { Linking } from 'react-native';\nimport ActionSheet from 'react-native-actionsheet';\nimport { getUrl } from './url';\n\nexport default class OpenMap extends Component {\n  componentDidMount() {\n    const { apps } = this.props;\n\n    if (apps.length > 1) {\n      this.ActionSheet.show();\n    } else if (apps.length === 1) {\n      this.openApp(0);\n    }\n  }\n\n  openApp = (index) => {\n    const { apps, latitude, longitude, title } = this.props;\n    const app = apps[index];\n\n    if (app) {\n      const lat = parseFloat(latitude);\n      const lng = parseFloat(longitude);\n\n      const url = getUrl(app, lat, lng, title || 'Location');\n      if (url) {\n        return Linking.openURL(url);\n      }\n    }\n  }\n\n  render() {\n    const { apps, cancelText, actionSheetTitle, actionSheetMessage } = this.props;\n\n    if (apps.length === 0) return null;\n    const options = apps.map((app) => app.title);\n    options.push(cancelText || 'Cancel');\n\n    return(\n      <ActionSheet\n        ref={(ref) => this.ActionSheet = ref}\n        options={options}\n        title={actionSheetTitle}\n        message={actionSheetMessage}\n        cancelButtonIndex={options.length - 1}\n        destructiveButtonIndex={options.length - 1}\n        onPress={this.openApp}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}