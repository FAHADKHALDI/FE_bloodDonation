{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { instance } from \"./instance\";\nimport { makeAutoObservable } from \"mobx\";\n\nvar RequestStore = function RequestStore() {\n  var _this = this;\n\n  _classCallCheck(this, RequestStore);\n\n  this.requests = [];\n  this.loading = true;\n\n  this.fetchRequests = function _callee() {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/request\"));\n\n          case 3:\n            res = _context.sent;\n            _this.requests = res.data;\n            _this.loading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"requestStore --> fetchRequests\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.deleteRequest = function _callee2(requestId, navigation) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(instance.delete(\"/request/\" + requestId));\n\n          case 3:\n            _this.requests = _this.requests.filter(function (request) {\n              return request._id !== requestId;\n            });\n            navigation.navigate(\"Timeline\");\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  this.createRequest = function _callee3(newRequest, toast) {\n    var res;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(instance.post(\"/request\", newRequest));\n\n          case 3:\n            res = _context3.sent;\n\n            _this.requests.push(res.data);\n\n            toast.show({\n              title: \"Request Created\",\n              status: \"success\",\n              placement: \"top\"\n            });\n            _context3.next = 12;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"requestStore --> createRequest\", _context3.t0);\n            toast.show({\n              title: \"Try Again\",\n              status: \"error\",\n              description: \"Please try again to create a new request and make sure you are signed in.\",\n              placement: \"top\"\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.editRequest = function _callee4(requestId, updatedRequest, toast) {\n    var res;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(instance.put(\"/request/\" + requestId._id, updatedRequest));\n\n          case 3:\n            res = _context4.sent;\n            _this.requests = _this.requests.map(function (request) {\n              return request._id === requestId._id ? res.data : request;\n            });\n            toast.show({\n              title: \"Request Updated\",\n              status: \"success\",\n              placement: \"top\"\n            });\n            _context4.next = 10;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar requestStore = new RequestStore();\nrequestStore.fetchRequests();\nexport default requestStore;","map":{"version":3,"sources":["/Users/aealaskar/Desktop/Development/FE_bloodDonation/stores/requestStore.js"],"names":["instance","makeAutoObservable","RequestStore","requests","loading","fetchRequests","get","res","data","console","log","deleteRequest","requestId","navigation","delete","filter","request","_id","navigate","createRequest","newRequest","toast","post","push","show","title","status","placement","description","editRequest","updatedRequest","put","map","requestStore"],"mappings":"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","sourcesContent":["import { instance } from \"./instance\";\nimport { makeAutoObservable } from \"mobx\";\n\nclass RequestStore {\n  requests = [];\n  loading = true;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchRequests = async () => {\n    try {\n      const res = await instance.get(\"/request\");\n      this.requests = res.data;\n      this.loading = false;\n    } catch (error) {\n      console.log(\"requestStore --> fetchRequests\", error);\n    }\n  };\n\n  deleteRequest = async (requestId, navigation) => {\n    try {\n      await instance.delete(`/request/${requestId}`);\n      this.requests = this.requests.filter(\n        (request) => request._id !== requestId\n      );\n      navigation.navigate(\"Timeline\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  createRequest = async (newRequest, toast) => {\n    try {\n      const res = await instance.post(\"/request\", newRequest);\n      this.requests.push(res.data);\n      toast.show({\n        title: \"Request Created\",\n        status: \"success\",\n        placement: \"top\",\n      });\n    } catch (error) {\n      console.log(\"requestStore --> createRequest\", error);\n      toast.show({\n        title: \"Try Again\",\n        status: \"error\",\n        description:\n          \"Please try again to create a new request and make sure you are signed in.\",\n        placement: \"top\",\n      });\n    }\n  };\n\n  editRequest = async (requestId, updatedRequest, toast) => {\n    try {\n      const res = await instance.put(\n        `/request/${requestId._id}`,\n        updatedRequest\n      );\n      this.requests = this.requests.map((request) =>\n        request._id === requestId._id ? res.data : request\n      );\n      toast.show({\n        title: \"Request Updated\",\n        status: \"success\",\n        placement: \"top\",\n      });\n    } catch (error) {}\n  };\n}\n\nconst requestStore = new RequestStore();\nrequestStore.fetchRequests();\nexport default requestStore;\n"]},"metadata":{},"sourceType":"module"}