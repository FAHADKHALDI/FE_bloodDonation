{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { instance } from \"./instance\";\nimport { makeAutoObservable } from \"mobx\";\n\nvar RequestStore = function RequestStore() {\n  var _this = this;\n\n  _classCallCheck(this, RequestStore);\n\n  this.requests = [];\n  this.loading = true;\n\n  this.fetchRequests = function _callee() {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/request\"));\n\n          case 3:\n            res = _context.sent;\n            _this.requests = res.data;\n            _this.loading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"requestStore --> fetchRequests\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.createRequest = function _callee2(newRequest, toast) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(instance.post(\"/request\", newRequest));\n\n          case 3:\n            res = _context2.sent;\n\n            _this.requests.push(res.data);\n\n            toast.show({\n              title: \"Request Created\",\n              status: \"success\",\n              placement: \"top\"\n            });\n            _context2.next = 12;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"requestStore --> createRequest\", _context2.t0);\n            toast.show({\n              title: \"Try Again\",\n              status: \"error\",\n              description: \"Please try again to create a new request and make sure you are signed in.\",\n              placement: \"top\"\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar requestStore = new RequestStore();\nrequestStore.fetchRequests();\nexport default requestStore;","map":{"version":3,"sources":["/Users/aealaskar/Desktop/Development/FE_bloodDonation/stores/requestStore.js"],"names":["instance","makeAutoObservable","RequestStore","requests","loading","fetchRequests","get","res","data","console","log","createRequest","newRequest","toast","post","push","show","title","status","placement","description","requestStore"],"mappings":";;AAAA,SAASA,QAAT;AACA,SAASC,kBAAT,QAAmC,MAAnC;;IAEMC,Y,GAIJ,wBAAc;AAAA;;AAAA;;AAAA,OAHdC,QAGc,GAHH,EAGG;AAAA,OAFdC,OAEc,GAFJ,IAEI;;AAAA,OAIdC,aAJc,GAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEML,QAAQ,CAACM,GAAT,CAAa,UAAb,CAFN;;AAAA;AAENC,YAAAA,GAFM;AAGZ,YAAA,KAAI,CAACJ,QAAL,GAAgBI,GAAG,CAACC,IAApB;AACA,YAAA,KAAI,CAACJ,OAAL,GAAe,KAAf;AAJY;AAAA;;AAAA;AAAA;AAAA;AAMZK,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJF;;AAAA,OAcdC,aAdc,GAcE,kBAAOC,UAAP,EAAmBC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEMb,QAAQ,CAACc,IAAT,CAAc,UAAd,EAA0BF,UAA1B,CAFN;;AAAA;AAENL,YAAAA,GAFM;;AAGZ,YAAA,KAAI,CAACJ,QAAL,CAAcY,IAAd,CAAmBR,GAAG,CAACC,IAAvB;;AACAK,YAAAA,KAAK,CAACG,IAAN,CAAW;AACTC,cAAAA,KAAK,EAAE,iBADE;AAETC,cAAAA,MAAM,EAAE,SAFC;AAGTC,cAAAA,SAAS,EAAE;AAHF,aAAX;AAJY;AAAA;;AAAA;AAAA;AAAA;AAUZV,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAG,YAAAA,KAAK,CAACG,IAAN,CAAW;AACTC,cAAAA,KAAK,EAAE,WADE;AAETC,cAAAA,MAAM,EAAE,OAFC;AAGTE,cAAAA,WAAW,EACT,2EAJO;AAKTD,cAAAA,SAAS,EAAE;AALF,aAAX;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAdF;;AACZlB,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,C;;AAkCH,IAAMoB,YAAY,GAAG,IAAInB,YAAJ,EAArB;AACAmB,YAAY,CAAChB,aAAb;AACA,eAAegB,YAAf","sourcesContent":["import { instance } from \"./instance\";\nimport { makeAutoObservable } from \"mobx\";\n\nclass RequestStore {\n  requests = [];\n  loading = true;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchRequests = async () => {\n    try {\n      const res = await instance.get(\"/request\");\n      this.requests = res.data;\n      this.loading = false;\n    } catch (error) {\n      console.log(\"requestStore --> fetchRequests\", error);\n    }\n  };\n\n  createRequest = async (newRequest, toast) => {\n    try {\n      const res = await instance.post(\"/request\", newRequest);\n      this.requests.push(res.data);\n      toast.show({\n        title: \"Request Created\",\n        status: \"success\",\n        placement: \"top\",\n      });\n    } catch (error) {\n      console.log(\"requestStore --> createRequest\", error);\n      toast.show({\n        title: \"Try Again\",\n        status: \"error\",\n        description:\n          \"Please try again to create a new request and make sure you are signed in.\",\n        placement: \"top\",\n      });\n    }\n  };\n}\n\nconst requestStore = new RequestStore();\nrequestStore.fetchRequests();\nexport default requestStore;\n"]},"metadata":{},"sourceType":"module"}