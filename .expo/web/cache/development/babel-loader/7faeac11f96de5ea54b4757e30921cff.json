{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Button, Modal, FormControl, Input, Center, NativeBaseProvider, Select, VStack, CheckIcon, useToast, HStack, Switch } from \"native-base\";\nimport { useState } from \"react\";\nimport requestStore from \"../../stores/requestStore\";\n\nvar RequestModal = function RequestModal() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState({\n    name: \"\",\n    fileNumber: \"\",\n    bloodType: \"\",\n    age: \"\",\n    phone: \"\",\n    civilId: \"\",\n    gender: \"\",\n    description: \"\",\n    priority: \"low\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      request = _useState4[0],\n      setRequest = _useState4[1];\n\n  var toast = useToast();\n\n  var handleSubmit = function handleSubmit() {\n    console.log(request);\n    requestStore.createRequest(request, toast);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    }\n  }, \"Button\"), React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\"\n  }, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Create a Request\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Name\"), React.createElement(Input, {\n    placeholder: \"Enter Your Name\",\n    onChangeText: function onChangeText(name) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        name: name\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"File Number\"), React.createElement(Input, {\n    placeholder: \"Enter File Number\",\n    onChangeText: function onChangeText(fileNumber) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        fileNumber: fileNumber\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Blood Type\"), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: request.bloodType,\n    minWidth: \"200\",\n    accessibilityLabel: \"Choose Blood Type\",\n    placeholder: \"Choose Blood Type\",\n    _selectedItem: {\n      bg: \"teal.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: \"5\"\n      })\n    },\n    mt: 1,\n    onValueChange: function onValueChange(bloodType) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        bloodType: bloodType\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"A+\",\n    value: \"A+\"\n  }), React.createElement(Select.Item, {\n    label: \"A-\",\n    value: \"A-\"\n  }), React.createElement(Select.Item, {\n    label: \"B+\",\n    value: \"B+\"\n  }), React.createElement(Select.Item, {\n    label: \"B-\",\n    value: \"B-\"\n  }), React.createElement(Select.Item, {\n    label: \"O+\",\n    value: \"O+\"\n  }), React.createElement(Select.Item, {\n    label: \"O-\",\n    value: \"O-\"\n  }), React.createElement(Select.Item, {\n    label: \"AB+\",\n    value: \"AB+\"\n  }), React.createElement(Select.Item, {\n    label: \"AB-\",\n    value: \"AB-\"\n  })))), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Age\"), React.createElement(Input, {\n    placeholder: \"Enter Your Age\",\n    onChangeText: function onChangeText(age) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        age: age\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Phone Number\"), React.createElement(Input, {\n    placeholder: \"Enter Phone Number\",\n    onChangeText: function onChangeText(phone) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        phone: phone\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Civil ID\"), React.createElement(Input, {\n    placeholder: \"Enter Civil ID\",\n    onChangeText: function onChangeText(civilId) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        civilId: civilId\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Gender\"), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: request.gender,\n    minWidth: \"200\",\n    accessibilityLabel: \"Choose Gender\",\n    placeholder: \"Choose Gender\",\n    _selectedItem: {\n      bg: \"teal.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: \"5\"\n      })\n    },\n    mt: 1,\n    onValueChange: function onValueChange(gender) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        gender: gender\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Male\",\n    value: \"male\"\n  }), React.createElement(Select.Item, {\n    label: \"Female\",\n    value: \"female\"\n  })))), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Description\"), React.createElement(Input, {\n    placeholder: \"Write Your Description\",\n    onChangeText: function onChangeText(description) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        description: description\n      }));\n    }\n  })), React.createElement(HStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Switch, {\n    size: \"md\",\n    onToggle: function onToggle(priority) {\n      return setRequest(_objectSpread(_objectSpread({}, request), {}, {\n        priority: priority ? \"high\" : \"low\"\n      }));\n    }\n  }))), React.createElement(Modal.Footer, null, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    onPress: handleSubmit\n  }, \"Submit\"))))));\n};\n\nexport default RequestModal;","map":{"version":3,"sources":["/Users/aealaskar/Desktop/Development/FE_bloodDonation/components/Requests/RequestModal.js"],"names":["React","Button","Modal","FormControl","Input","Center","NativeBaseProvider","Select","VStack","CheckIcon","useToast","HStack","Switch","useState","requestStore","RequestModal","showModal","setShowModal","name","fileNumber","bloodType","age","phone","civilId","gender","description","priority","request","setRequest","toast","handleSubmit","console","log","createRequest","bg","endIcon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Modal,\n  FormControl,\n  Input,\n  Center,\n  NativeBaseProvider,\n  Select,\n  VStack,\n  CheckIcon,\n  useToast,\n  HStack,\n  Switch,\n} from \"native-base\";\nimport { useState } from \"react\";\nimport requestStore from \"../../stores/requestStore\";\nconst RequestModal = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const [request, setRequest] = useState({\n    name: \"\",\n    fileNumber: \"\",\n    bloodType: \"\",\n    age: \"\",\n    phone: \"\",\n    civilId: \"\",\n    gender: \"\",\n    description: \"\",\n    priority: \"low\",\n  });\n\n  const toast = useToast();\n  const handleSubmit = () => {\n    console.log(request);\n    requestStore.createRequest(request, toast);\n  };\n\n  return (\n    <>\n      <Button onPress={() => setShowModal(true)}>Button</Button>\n      <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n        <Modal.Content maxWidth=\"400px\">\n          <Modal.CloseButton />\n          <Modal.Header>Create a Request</Modal.Header>\n          <Modal.Body>\n            <FormControl>\n              <FormControl.Label>Name</FormControl.Label>\n              <Input\n                placeholder=\"Enter Your Name\"\n                onChangeText={(name) => setRequest({ ...request, name })}\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>File Number</FormControl.Label>\n              <Input\n                placeholder=\"Enter File Number\"\n                onChangeText={(fileNumber) =>\n                  setRequest({ ...request, fileNumber })\n                }\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Blood Type</FormControl.Label>\n              <VStack alignItems=\"center\" space={4}>\n                <Select\n                  selectedValue={request.bloodType}\n                  minWidth=\"200\"\n                  accessibilityLabel=\"Choose Blood Type\"\n                  placeholder=\"Choose Blood Type\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon size=\"5\" />,\n                  }}\n                  mt={1}\n                  onValueChange={(bloodType) =>\n                    setRequest({ ...request, bloodType })\n                  }\n                >\n                  <Select.Item label=\"A+\" value=\"A+\" />\n                  <Select.Item label=\"A-\" value=\"A-\" />\n                  <Select.Item label=\"B+\" value=\"B+\" />\n                  <Select.Item label=\"B-\" value=\"B-\" />\n                  <Select.Item label=\"O+\" value=\"O+\" />\n                  <Select.Item label=\"O-\" value=\"O-\" />\n                  <Select.Item label=\"AB+\" value=\"AB+\" />\n                  <Select.Item label=\"AB-\" value=\"AB-\" />\n                </Select>\n              </VStack>\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Age</FormControl.Label>\n              <Input\n                placeholder=\"Enter Your Age\"\n                onChangeText={(age) => setRequest({ ...request, age })}\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Phone Number</FormControl.Label>\n              <Input\n                placeholder=\"Enter Phone Number\"\n                onChangeText={(phone) => setRequest({ ...request, phone })}\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Civil ID</FormControl.Label>\n              <Input\n                placeholder=\"Enter Civil ID\"\n                onChangeText={(civilId) => setRequest({ ...request, civilId })}\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Gender</FormControl.Label>\n              <VStack alignItems=\"center\" space={4}>\n                <Select\n                  selectedValue={request.gender}\n                  minWidth=\"200\"\n                  accessibilityLabel=\"Choose Gender\"\n                  placeholder=\"Choose Gender\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon size=\"5\" />,\n                  }}\n                  mt={1}\n                  onValueChange={(gender) => setRequest({ ...request, gender })}\n                >\n                  <Select.Item label=\"Male\" value=\"male\" />\n                  <Select.Item label=\"Female\" value=\"female\" />\n                </Select>\n              </VStack>\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Description</FormControl.Label>\n              <Input\n                placeholder=\"Write Your Description\"\n                onChangeText={(description) =>\n                  setRequest({ ...request, description })\n                }\n              />\n            </FormControl>\n            <HStack alignItems=\"center\" space={4}>\n              <Switch\n                size=\"md\"\n                onToggle={(priority) =>\n                  setRequest({\n                    ...request,\n                    priority: priority ? \"high\" : \"low\",\n                  })\n                }\n              />\n            </HStack>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button.Group space={2}>\n              <Button\n                variant=\"ghost\"\n                colorScheme=\"blueGray\"\n                onPress={() => {\n                  setShowModal(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button onPress={handleSubmit}>Submit</Button>\n            </Button.Group>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nexport default RequestModal;\n"]},"metadata":{},"sourceType":"module"}