{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { Button, Modal, FormControl, Input, Center, NativeBaseProvider, Select, VStack, CheckIcon } from \"native-base\";\nimport { useState } from \"react\";\n\nvar RequestModal = function RequestModal() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gender = _React$useState2[0],\n      setGender = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      blood = _React$useState4[0],\n      setBlood = _React$useState4[1];\n\n  var _useState3 = useState({\n    name: \"\",\n    fileNumber: \"\",\n    bloodType: \"\",\n    age: \"\",\n    phone: \"\",\n    civilId: \"\",\n    gender: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      request = _useState4[0],\n      setRequest = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    }\n  }, \"Button\"), React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\"\n  }, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Create a Request\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Name\"), React.createElement(Input, {\n    placeholder: \"Enter Your Name\"\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"File Number\"), React.createElement(Input, {\n    placeholder: \"Enter File Number\"\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Blood Type\"), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: blood,\n    minWidth: \"200\",\n    accessibilityLabel: \"Choose Blood Type\",\n    placeholder: \"Choose Blood Type\",\n    _selectedItem: {\n      bg: \"teal.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: \"5\"\n      })\n    },\n    mt: 1,\n    onValueChange: function onValueChange(itemValue) {\n      return setBlood(itemValue);\n    }\n  }, React.createElement(Select.Item, {\n    label: \"A+\",\n    value: \"A+\"\n  }), React.createElement(Select.Item, {\n    label: \"A-\",\n    value: \"A-\"\n  }), React.createElement(Select.Item, {\n    label: \"B+\",\n    value: \"B+\"\n  }), React.createElement(Select.Item, {\n    label: \"B-\",\n    value: \"B-\"\n  }), React.createElement(Select.Item, {\n    label: \"O+\",\n    value: \"O+\"\n  }), React.createElement(Select.Item, {\n    label: \"O-\",\n    value: \"O-\"\n  }), React.createElement(Select.Item, {\n    label: \"AB+\",\n    value: \"AB+\"\n  }), React.createElement(Select.Item, {\n    label: \"AB-\",\n    value: \"AB-\"\n  })))), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Age\"), React.createElement(Input, null)), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Phone Number\"), React.createElement(Input, null)), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Civil ID\"), React.createElement(Input, null)), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Gender\"), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: gender,\n    minWidth: \"200\",\n    accessibilityLabel: \"Choose Gender\",\n    placeholder: \"Choose Gender\",\n    _selectedItem: {\n      bg: \"teal.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: \"5\"\n      })\n    },\n    mt: 1,\n    onValueChange: function onValueChange(itemValue) {\n      return setGender(itemValue);\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Male\",\n    value: \"male\"\n  }), React.createElement(Select.Item, {\n    label: \"Female\",\n    value: \"female\"\n  })))), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Description\"), React.createElement(Input, null))), React.createElement(Modal.Footer, null, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Save\"))))));\n};\n\nexport default RequestModal;","map":{"version":3,"sources":["/Users/aealaskar/Desktop/Development/FE_bloodDonation/components/Requests/RequestModal.js"],"names":["React","Button","Modal","FormControl","Input","Center","NativeBaseProvider","Select","VStack","CheckIcon","useState","RequestModal","showModal","setShowModal","gender","setGender","blood","setBlood","name","fileNumber","bloodType","age","phone","civilId","request","setRequest","bg","endIcon","itemValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,kBANF,EAOEC,MAPF,EAQEC,MARF,EASEC,SATF,QAUO,aAVP;AAWA,SAASC,QAAT,QAAyB,OAAzB;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,kBAAkCD,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AACA,wBAA0Bb,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1B;AAAA;AAAA,MAAKI,MAAL;AAAA,MAAaC,SAAb;;AACA,yBAAwBf,KAAK,CAACU,QAAN,CAAe,EAAf,CAAxB;AAAA;AAAA,MAAKM,KAAL;AAAA,MAAYC,QAAZ;;AACA,mBAA8BP,QAAQ,CAAC;AACrCQ,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,UAAU,EAAE,EAFyB;AAGrCC,IAAAA,SAAS,EAAE,EAH0B;AAIrCC,IAAAA,GAAG,EAAE,EAJgC;AAKrCC,IAAAA,KAAK,EAAE,EAL8B;AAMrCC,IAAAA,OAAO,EAAE,EAN4B;AAOrCT,IAAAA,MAAM,EAAE;AAP6B,GAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AAUA,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMZ,YAAY,CAAC,IAAD,CAAlB;AAAA;AAAjB,cADF,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,SAAf;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA;AAAnC,KACE,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,QAAQ,EAAC;AAAxB,KACE,oBAAC,KAAD,CAAO,WAAP,OADF,EAEE,oBAAC,KAAD,CAAO,MAAP,2BAFF,EAGE,oBAAC,KAAD,CAAO,IAAP,QACE,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,KAAb,eADF,EAEE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,IAFF,CADF,EAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,sBADF,EAEE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,IAFF,CALF,EASE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,qBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAnC,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEG,KADjB;AAEE,IAAA,QAAQ,EAAC,KAFX;AAGE,IAAA,kBAAkB,EAAC,mBAHrB;AAIE,IAAA,WAAW,EAAC,mBAJd;AAKE,IAAA,aAAa,EAAE;AACbU,MAAAA,EAAE,EAAE,UADS;AAEbC,MAAAA,OAAO,EAAE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC;AAAhB;AAFI,KALjB;AASE,IAAA,EAAE,EAAE,CATN;AAUE,IAAA,aAAa,EAAE,uBAACC,SAAD;AAAA,aAAeX,QAAQ,CAACW,SAAD,CAAvB;AAAA;AAVjB,KAYE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC;AAA9B,IAZF,EAaE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC;AAA9B,IAbF,EAcE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC;AAA9B,IAdF,EAeE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC;AAA9B,IAfF,EAgBE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC;AAA9B,IAhBF,EAiBE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC;AAA9B,IAjBF,EAkBE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,KAAnB;AAAyB,IAAA,KAAK,EAAC;AAA/B,IAlBF,EAmBE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,KAAnB;AAAyB,IAAA,KAAK,EAAC;AAA/B,IAnBF,CADF,CAFF,CATF,EAmCE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,cADF,EAEE,oBAAC,KAAD,OAFF,CAnCF,EAuCE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,uBADF,EAEE,oBAAC,KAAD,OAFF,CAvCF,EA2CE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,mBADF,EAEE,oBAAC,KAAD,OAFF,CA3CF,EA+CE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,iBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAnC,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEd,MADjB;AAEE,IAAA,QAAQ,EAAC,KAFX;AAGE,IAAA,kBAAkB,EAAC,eAHrB;AAIE,IAAA,WAAW,EAAC,eAJd;AAKE,IAAA,aAAa,EAAE;AACbY,MAAAA,EAAE,EAAE,UADS;AAEbC,MAAAA,OAAO,EAAE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC;AAAhB;AAFI,KALjB;AASE,IAAA,EAAE,EAAE,CATN;AAUE,IAAA,aAAa,EAAE,uBAACC,SAAD;AAAA,aAAeb,SAAS,CAACa,SAAD,CAAxB;AAAA;AAVjB,KAYE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,KAAK,EAAC;AAAhC,IAZF,EAaE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAC;AAAlC,IAbF,CADF,CAFF,CA/CF,EAmEE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,sBADF,EAEE,oBAAC,KAAD,OAFF,CAnEF,CAHF,EA2EE,oBAAC,KAAD,CAAO,MAAP,QACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,KAAK,EAAE;AAArB,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AALH,cADF,EAUE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AAHH,YAVF,CADF,CA3EF,CADF,CAFF,CADF;AAuGD,CArHD;;AAuHA,eAAeF,YAAf","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Modal,\n  FormControl,\n  Input,\n  Center,\n  NativeBaseProvider,\n  Select,\n  VStack,\n  CheckIcon,\n} from \"native-base\";\nimport { useState } from \"react\";\nconst RequestModal = () => {\n  const [showModal, setShowModal] = useState(false);\n  let [gender, setGender] = React.useState(\"\");\n  let [blood, setBlood] = React.useState(\"\");\n  const [request, setRequest] = useState({\n    name: \"\",\n    fileNumber: \"\",\n    bloodType: \"\",\n    age: \"\",\n    phone: \"\",\n    civilId: \"\",\n    gender: \"\",\n  });\n\n  return (\n    <>\n      <Button onPress={() => setShowModal(true)}>Button</Button>\n      <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n        <Modal.Content maxWidth=\"400px\">\n          <Modal.CloseButton />\n          <Modal.Header>Create a Request</Modal.Header>\n          <Modal.Body>\n            <FormControl>\n              <FormControl.Label>Name</FormControl.Label>\n              <Input placeholder=\"Enter Your Name\" />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>File Number</FormControl.Label>\n              <Input placeholder=\"Enter File Number\" />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Blood Type</FormControl.Label>\n              <VStack alignItems=\"center\" space={4}>\n                <Select\n                  selectedValue={blood}\n                  minWidth=\"200\"\n                  accessibilityLabel=\"Choose Blood Type\"\n                  placeholder=\"Choose Blood Type\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon size=\"5\" />,\n                  }}\n                  mt={1}\n                  onValueChange={(itemValue) => setBlood(itemValue)}\n                >\n                  <Select.Item label=\"A+\" value=\"A+\" />\n                  <Select.Item label=\"A-\" value=\"A-\" />\n                  <Select.Item label=\"B+\" value=\"B+\" />\n                  <Select.Item label=\"B-\" value=\"B-\" />\n                  <Select.Item label=\"O+\" value=\"O+\" />\n                  <Select.Item label=\"O-\" value=\"O-\" />\n                  <Select.Item label=\"AB+\" value=\"AB+\" />\n                  <Select.Item label=\"AB-\" value=\"AB-\" />\n                </Select>\n              </VStack>\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Age</FormControl.Label>\n              <Input />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Phone Number</FormControl.Label>\n              <Input />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Civil ID</FormControl.Label>\n              <Input />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Gender</FormControl.Label>\n              <VStack alignItems=\"center\" space={4}>\n                <Select\n                  selectedValue={gender}\n                  minWidth=\"200\"\n                  accessibilityLabel=\"Choose Gender\"\n                  placeholder=\"Choose Gender\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon size=\"5\" />,\n                  }}\n                  mt={1}\n                  onValueChange={(itemValue) => setGender(itemValue)}\n                >\n                  <Select.Item label=\"Male\" value=\"male\" />\n                  <Select.Item label=\"Female\" value=\"female\" />\n                </Select>\n              </VStack>\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Description</FormControl.Label>\n              <Input />\n            </FormControl>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button.Group space={2}>\n              <Button\n                variant=\"ghost\"\n                colorScheme=\"blueGray\"\n                onPress={() => {\n                  setShowModal(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                onPress={() => {\n                  setShowModal(false);\n                }}\n              >\n                Save\n              </Button>\n            </Button.Group>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nexport default RequestModal;\n"]},"metadata":{},"sourceType":"module"}