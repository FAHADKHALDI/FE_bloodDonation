{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { observer } from \"mobx-react\";\nimport { ScrollView, View } from \"native-base\";\nimport React, { useState } from \"react\";\nimport { Button } from \"native-base\";\nimport RequestItem from \"./RequestItem\";\nimport SearchBar from \"../Search/SearchBar\";\nimport RequestStore from \"../../stores/requestStore\";\nimport requestStore from \"../../stores/requestStore\";\n\nvar RequestsList = function RequestsList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isUrgent = _useState4[0],\n      setisUrgent = _useState4[1];\n\n  var requestList = RequestStore.requests.filter(function (request) {\n    return request.bloodType.toLowerCase().includes(query.toLowerCase());\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filteredUrgent = RequestStore.requests.filter(function (request) {\n    return request.priority === \"URGENT\";\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  var filterDonated = RequestStore.requests.filter(function (request) {\n    return request.donate === true;\n  }).map(function (request) {\n    return React.createElement(RequestItem, {\n      request: request,\n      key: request._id,\n      navigation: navigation\n    });\n  });\n  return React.createElement(View, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return setisUrgent(!isUrgent);\n    }\n  }, \" \", isUrgent ? \"nonurgent\" : \"urgent\", \" \"), React.createElement(SearchBar, {\n    setQuery: setQuery\n  }), React.createElement(ScrollView, null, isUrgent ? filteredUrgent : requestList));\n};\n\nexport default observer(RequestsList);","map":{"version":3,"sources":["/Users/aealaskar/Desktop/Development/FE_bloodDonation/components/Requests/RequestsList.js"],"names":["observer","ScrollView","View","React","useState","Button","RequestItem","SearchBar","RequestStore","requestStore","RequestsList","navigation","query","setQuery","isUrgent","setisUrgent","requestList","requests","filter","request","bloodType","toLowerCase","includes","map","_id","filteredUrgent","priority","filterDonated","donate"],"mappings":";AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,aAAjC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,aAAvB;AAGA,OAAOC,WAAP;AACA,OAAOC,SAAP;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACvC,kBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AAEA,mBAAgCT,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,WAAW,GAAGR,YAAY,CAACS,QAAb,CACjBC,MADiB,CACV,UAACC,OAAD;AAAA,WACNA,OAAO,CAACC,SAAR,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyCV,KAAK,CAACS,WAAN,EAAzC,CADM;AAAA,GADU,EAIjBE,GAJiB,CAIb,UAACJ,OAAD;AAAA,WACH,oBAAC,WAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,GAAG,EAAEA,OAAO,CAACK,GAFf;AAGE,MAAA,UAAU,EAAEb;AAHd,MADG;AAAA,GAJa,CAApB;AAYA,MAAMc,cAAc,GAAGjB,YAAY,CAACS,QAAb,CACpBC,MADoB,CACb,UAACC,OAAD;AAAA,WAAaA,OAAO,CAACO,QAAR,KAAqB,QAAlC;AAAA,GADa,EAEpBH,GAFoB,CAEhB,UAACJ,OAAD;AAAA,WACH,oBAAC,WAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,GAAG,EAAEA,OAAO,CAACK,GAFf;AAGE,MAAA,UAAU,EAAEb;AAHd,MADG;AAAA,GAFgB,CAAvB;AAUA,MAAMgB,aAAa,GAAGnB,YAAY,CAACS,QAAb,CACnBC,MADmB,CACZ,UAACC,OAAD;AAAA,WAAaA,OAAO,CAACS,MAAR,KAAmB,IAAhC;AAAA,GADY,EAEnBL,GAFmB,CAEf,UAACJ,OAAD;AAAA,WACH,oBAAC,WAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,GAAG,EAAEA,OAAO,CAACK,GAFf;AAGE,MAAA,UAAU,EAAEb;AAHd,MADG;AAAA,GAFe,CAAtB;AAUA,SACE,oBAAC,IAAD,QACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMI,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;AAAjB,KACG,GADH,EAEGA,QAAQ,GAAG,WAAH,GAAiB,QAF5B,EAEsC,GAFtC,CADF,EAKE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAED;AAArB,IALF,EAME,oBAAC,UAAD,QAAaC,QAAQ,GAAGW,cAAH,GAAoBT,WAAzC,CANF,CADF;AAUD,CA/CD;;AAiDA,eAAehB,QAAQ,CAACU,YAAD,CAAvB","sourcesContent":["import { observer } from \"mobx-react\";\nimport { ScrollView, View } from \"native-base\";\nimport React, { useState } from \"react\";\nimport { Button } from \"native-base\";\n\n// Components\nimport RequestItem from \"./RequestItem\";\nimport SearchBar from \"../Search/SearchBar\";\n// Stores\nimport RequestStore from \"../../stores/requestStore\";\nimport requestStore from \"../../stores/requestStore\";\n\nconst RequestsList = ({ navigation }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const [isUrgent, setisUrgent] = useState(false);\n\n  const requestList = RequestStore.requests\n    .filter((request) =>\n      request.bloodType.toLowerCase().includes(query.toLowerCase())\n    )\n    .map((request) => (\n      <RequestItem\n        request={request}\n        key={request._id}\n        navigation={navigation}\n      />\n    ));\n\n  const filteredUrgent = RequestStore.requests\n    .filter((request) => request.priority === \"URGENT\")\n    .map((request) => (\n      <RequestItem\n        request={request}\n        key={request._id}\n        navigation={navigation}\n      />\n    ));\n\n  const filterDonated = RequestStore.requests\n    .filter((request) => request.donate === true)\n    .map((request) => (\n      <RequestItem\n        request={request}\n        key={request._id}\n        navigation={navigation}\n      />\n    ));\n\n  return (\n    <View>\n      <Button onPress={() => setisUrgent(!isUrgent)}>\n        {\" \"}\n        {isUrgent ? \"nonurgent\" : \"urgent\"}{\" \"}\n      </Button>\n      <SearchBar setQuery={setQuery} />\n      <ScrollView>{isUrgent ? filteredUrgent : requestList}</ScrollView>\n    </View>\n  );\n};\n\nexport default observer(RequestsList);\n"]},"metadata":{},"sourceType":"module"}