{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar TripStore = function TripStore() {\n  var _this = this;\n\n  _classCallCheck(this, TripStore);\n\n  this.request = [];\n  this.isLoading = true;\n\n  this.fetchRequest = function _callee() {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/request\"));\n\n          case 3:\n            res = _context.sent;\n            _this.request = res.data;\n            _this.isLoading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.addRequest = function _callee2(request, navigation) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(instance.post(\"/request\", request));\n\n          case 3:\n            res = _context2.sent;\n\n            _this.request.push(res.data);\n\n            navigation.replace(\"Home\");\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar requestStore = new RequestStore();\nrequestStore.fetchRequest();\nexport default requestStore;","map":{"version":3,"sources":["/Users/bandaralmutairi/Desktop/Hayat project/FE_bloodDonation/stores/requestStore.js"],"names":["makeAutoObservable","instance","TripStore","request","isLoading","fetchRequest","get","res","data","console","log","addRequest","navigation","post","push","replace","requestStore","RequestStore"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,S,GAIJ,qBAAc;AAAA;;AAAA;;AAAA,OAHdC,OAGc,GAHJ,EAGI;AAAA,OAFdC,SAEc,GAFF,IAEE;;AAAA,OAIdC,YAJc,GAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOJ,QAAQ,CAACK,GAAT,CAAa,UAAb,CAFP;;AAAA;AAELC,YAAAA,GAFK;AAGX,YAAA,KAAI,CAACJ,OAAL,GAAeI,GAAG,CAACC,IAAnB;AACA,YAAA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;AAJW;AAAA;;AAAA;AAAA;AAAA;AAMXK,YAAAA,OAAO,CAACC,GAAR;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJD;;AAAA,OAadC,UAbc,GAaD,kBAAOR,OAAP,EAAgBS,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESX,QAAQ,CAACY,IAAT,CAAc,UAAd,EAA0BV,OAA1B,CAFT;;AAAA;AAEHI,YAAAA,GAFG;;AAGT,YAAA,KAAI,CAACJ,OAAL,CAAaW,IAAb,CAAkBP,GAAG,CAACC,IAAtB;;AAEAI,YAAAA,UAAU,CAACG,OAAX,CAAmB,MAAnB;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTN,YAAAA,OAAO,CAACC,GAAR;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAbC;;AACZV,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,C;;AAwBH,IAAMgB,YAAY,GAAG,IAAIC,YAAJ,EAArB;AACAD,YAAY,CAACX,YAAb;AACA,eAAeW,YAAf","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nclass TripStore {\n  request = [];\n  isLoading = true;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchRequest = async () => {\n    try {\n      const res = await instance.get(\"/request\");\n      this.request = res.data;\n      this.isLoading = false;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  addRequest = async (request, navigation) => {\n    try {\n      const res = await instance.post(\"/request\", request);\n      this.request.push(res.data);\n\n      navigation.replace(\"Home\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n}\n\nconst requestStore = new RequestStore();\nrequestStore.fetchRequest();\nexport default requestStore;\n"]},"metadata":{},"sourceType":"module"}