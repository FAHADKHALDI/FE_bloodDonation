{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport RootSiblings from 'react-native-root-siblings';\nimport ActionSheet from \"./ActionSheet\";\nimport { getApps } from \"./Apps\";\n\nvar OpenMapManager = function () {\n  function OpenMapManager() {\n    var _this = this;\n\n    _classCallCheck(this, OpenMapManager);\n\n    this.update = function (props) {\n      _this.props[_this.props.length - 1] = props;\n\n      _this.currentManager.update(React.createElement(ActionSheet, props));\n    };\n\n    this.show = function (options) {\n      _this.create(_objectSpread(_objectSpread({}, _this.props), options));\n    };\n\n    this.props = [];\n    getApps().then(function (apps) {\n      _this.props.apps = apps;\n    });\n  }\n\n  _createClass(OpenMapManager, [{\n    key: \"setCurrent\",\n    value: function setCurrent(props) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      if (!props) return;\n      this.currentManager = new RootSiblings(React.createElement(ActionSheet, props));\n    }\n  }, {\n    key: \"create\",\n    value: function create(props) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      this.setCurrent(props, callback);\n      this.props.push(props);\n    }\n  }]);\n\n  return OpenMapManager;\n}();\n\nexport default new OpenMapManager();","map":{"version":3,"sources":["/Users/bandaralmutairi/Desktop/Hayat project/FE_bloodDonation/node_modules/react-native-open-map/src/index.js"],"names":["React","RootSiblings","ActionSheet","getApps","OpenMapManager","update","props","length","currentManager","show","options","create","then","apps","callback","setCurrent","push"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP;AACA,SAASC,OAAT;;IAEMC,c;AACJ,4BAAc;AAAA;;AAAA;;AAAA,SAmBdC,MAnBc,GAmBL,UAACC,KAAD,EAAW;AAClB,MAAA,KAAI,CAACA,KAAL,CAAW,KAAI,CAACA,KAAL,CAAWC,MAAX,GAAoB,CAA/B,IAAoCD,KAApC;;AACA,MAAA,KAAI,CAACE,cAAL,CAAoBH,MAApB,CAA2B,oBAAC,WAAD,EAAiBC,KAAjB,CAA3B;AACD,KAtBa;;AAAA,SAwBdG,IAxBc,GAwBP,UAACC,OAAD,EAAa;AAClB,MAAA,KAAI,CAACC,MAAL,iCAAiB,KAAI,CAACL,KAAtB,GAAgCI,OAAhC;AACD,KA1Ba;;AACZ,SAAKJ,KAAL,GAAa,EAAb;AAEAH,IAAAA,OAAO,GAAGS,IAAV,CAAe,UAACC,IAAD,EAAU;AACvB,MAAA,KAAI,CAACP,KAAL,CAAWO,IAAX,GAAkBA,IAAlB;AACD,KAFD;AAGD;;;;WAED,oBAAWP,KAAX,EAAuC;AAAA,UAArBQ,QAAqB,uEAAV,YAAM,CAAE,CAAE;AACrC,UAAI,CAACR,KAAL,EAAY;AAEZ,WAAKE,cAAL,GAAsB,IAAIP,YAAJ,CAAiB,oBAAC,WAAD,EAAiBK,KAAjB,CAAjB,CAAtB;AACD;;;WAED,gBAAOA,KAAP,EAAmC;AAAA,UAArBQ,QAAqB,uEAAV,YAAM,CAAE,CAAE;AACjC,WAAKC,UAAL,CAAgBT,KAAhB,EAAuBQ,QAAvB;AACA,WAAKR,KAAL,CAAWU,IAAX,CAAgBV,KAAhB;AACD;;;;;;AAYH,eAAe,IAAIF,cAAJ,EAAf","sourcesContent":["import React from 'react';\nimport RootSiblings from 'react-native-root-siblings';\nimport ActionSheet from './ActionSheet';\nimport { getApps } from './Apps';\n\nclass OpenMapManager {\n  constructor() {\n    this.props = [];\n\n    getApps().then((apps) => {\n      this.props.apps = apps;\n    });\n  }\n\n  setCurrent(props, callback = () => {}) {\n    if (!props) return;\n\n    this.currentManager = new RootSiblings(<ActionSheet {...props} />);\n  }\n\n  create(props, callback = () => {}) {\n    this.setCurrent(props, callback);\n    this.props.push(props);\n  }\n\n  update = (props) => {\n    this.props[this.props.length - 1] = props;\n    this.currentManager.update(<ActionSheet {...props} />);\n  }\n\n  show = (options) => {\n    this.create({ ...this.props, ...options });\n  }\n}\n\nexport default new OpenMapManager();\n"]},"metadata":{},"sourceType":"module"}