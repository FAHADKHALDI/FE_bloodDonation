{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Modal, Button, VStack, Image, useToast } from \"native-base\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport requestStore from \"../../stores/requestStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../stores/authStore\";\nvar url1 = \"https://goo.gl/maps/Hu87cgFfvSQDhcEW7\";\n\nvar Confirm = function Confirm(_ref) {\n  var request = _ref.request,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalVisible = _React$useState2[0],\n      setModalVisible = _React$useState2[1];\n\n  var user = authStore.user;\n  var toast = useToast();\n\n  var handleSubmit = function handleSubmit() {\n    requestStore.confirmDonation(request._id, toast);\n    authStore.updateScore(user._id);\n    navigation.navigate(\"Timeline\");\n  };\n\n  var openUrl = function openUrl(url) {\n    var isSupported;\n    return _regeneratorRuntime.async(function openUrl$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n          case 2:\n            isSupported = _context.sent;\n\n            if (!isSupported) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Linking.openURL(url));\n\n          case 6:\n            _context.next = 9;\n            break;\n\n          case 8:\n            Alert.alert(\"can not open this url: \" + url);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    isOpen: modalVisible,\n    onClose: function onClose() {\n      return setModalVisible(false);\n    },\n    avoidKeyboard: true,\n    justifyContent: \"flex-end\",\n    bottom: \"500\",\n    size: \"lg\"\n  }, React.createElement(Modal.Content, null, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Confirmation\"), React.createElement(Icon, {\n    name: \"check-circle\",\n    style: {\n      marginLeft: 135,\n      marginTop: 10,\n      color: \"#65CC65\"\n    },\n    size: 40\n  }), React.createElement(Modal.Body, {\n    style: {\n      marginLeft: 55\n    }\n  }, \"Confirm Donation ?\"), React.createElement(Modal.Footer, null, React.createElement(Button, {\n    flex: \"1\",\n    onPress: handleSubmit\n  }, \"Yes\"), React.createElement(Button, {\n    flex: \"1\",\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    }\n  }, \"No\")))), React.createElement(VStack, {\n    space: 8,\n    alignItems: \"center\"\n  }, request.owner._id !== authStore.user._id && React.createElement(Pressable, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    }\n  }, request.donate === false && React.createElement(Image, {\n    source: require(\"../images/blood.png\"),\n    resizeMode: \"center\",\n    style: {\n      width: 40,\n      height: 40,\n      alignItems: \"flex-start\"\n    }\n  }), React.createElement(Button, {\n    title: \"Go\",\n    onPress: function onPress() {\n      openUrl[url1];\n    }\n  }))));\n};\n\nexport default observer(Confirm);\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/bandaralmutairi/Desktop/Hayat project/FE_bloodDonation/components/Confirmation/Confirm.js"],"names":["React","Modal","Button","VStack","Image","useToast","Icon","requestStore","observer","authStore","url1","Confirm","request","navigation","useState","modalVisible","setModalVisible","user","toast","handleSubmit","confirmDonation","_id","updateScore","navigate","openUrl","url","Linking","canOpenURL","isSupported","openURL","Alert","alert","marginLeft","marginTop","color","owner","donate","require","width","height","alignItems","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { StyleSheet, Text, Pressable,  Alert, Linking  } from \"react-native\";\nimport { Modal, Button, VStack, Image, useToast } from \"native-base\";\n\nimport Icon from \"react-native-vector-icons/Feather\";\nimport requestStore from \"../../stores/requestStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../stores/authStore\";\n\n\nconst url1 = \"https://goo.gl/maps/Hu87cgFfvSQDhcEW7\";\n\nconst Confirm = ({ request, navigation }) => {\n  const [modalVisible, setModalVisible] = React.useState(false);\n  const user = authStore.user;\n  const toast = useToast();\n  const handleSubmit = () => {\n    requestStore.confirmDonation(request._id, toast);\n    authStore.updateScore(user._id);\n    navigation.navigate(\"Timeline\");\n  };\n  const openUrl = async (url) => {\n    const isSupported = await Linking.canOpenURL(url);\n    if (isSupported){\n        await Linking.openURL(url);\n    }else{\n        Alert.alert(`can not open this url: ${url}`)\n    }\n\n}\n  return (\n    <>\n      <Modal\n        isOpen={modalVisible}\n        onClose={() => setModalVisible(false)}\n        avoidKeyboard\n        justifyContent=\"flex-end\"\n        bottom=\"500\"\n        size=\"lg\"\n      >\n        <Modal.Content>\n          <Modal.CloseButton />\n          <Modal.Header>Confirmation</Modal.Header>\n          <Icon\n            name=\"check-circle\"\n            style={{ marginLeft: 135, marginTop: 10, color: \"#65CC65\" }}\n            size={40}\n          />\n          <Modal.Body style={{ marginLeft: 55 }}>Confirm Donation ?</Modal.Body>\n          <Modal.Footer>\n            <Button flex=\"1\" onPress={handleSubmit}>\n              Yes\n            </Button>\n            <Button\n              flex=\"1\"\n              onPress={() => {\n                setModalVisible(!modalVisible);\n              }}\n            >\n              No\n            </Button>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n      <VStack space={8} alignItems=\"center\">\n        {request.owner._id !== authStore.user._id && (\n          <Pressable\n            onPress={() => {\n              setModalVisible(!modalVisible);\n            }}\n          >\n            {request.donate === false && (\n              <Image\n                source={require(\"../images/blood.png\")}\n                resizeMode=\"center\"\n                style={{\n                  width: 40,\n                  height: 40,\n                  alignItems: \"flex-start\",\n                }}\n              />\n            )}\n          <Button title=\"Go\" onPress={() => {openUrl[url1]}} />\n          </Pressable>\n        )}\n      </VStack>\n    </>\n  );\n};\n\nexport default observer(Confirm);\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}