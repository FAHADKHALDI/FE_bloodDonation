{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { observer } from \"mobx-react\";\nimport { Button, Modal, FormControl, Input, Center, NativeBaseProvider, Select, VStack, CheckIcon, useToast, HStack } from \"native-base\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport authStore from \"../../stores/authStore\";\nimport requestStore from \"../../stores/requestStore\";\n\nvar EditRequestModal = function EditRequestModal(_ref) {\n  var request = _ref.request;\n  console.log(request._id);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEnable = _useState4[0],\n      setIsEnable = _useState4[1];\n\n  var handleChange = function handleChange() {\n    setIsEnable(!isEnable);\n    setRequest(_objectSpread(_objectSpread({}, request), {}, {\n      priority: isEnable ? \"Normal\" : \"Urgent\"\n    }));\n  };\n\n  var _useState5 = useState({\n    name: request.name,\n    fileNumber: request.fileNumber,\n    bloodType: request.bloodType,\n    age: request.bloodType,\n    phone: request.phone,\n    civilId: request.civilId,\n    gender: request.gender,\n    description: request.description,\n    priority: request.priority\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updatedRequest = _useState6[0],\n      setUpdatedRequest = _useState6[1];\n\n  var toast = useToast();\n\n  var handleSubmit = function handleSubmit() {\n    requestStore.editRequest(request._id, updatedRequest, toast);\n  };\n\n  return React.createElement(React.Fragment, null, request.owner._id === authStore.user._id && React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    }\n  }, \"Update Request\"), React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\"\n  }, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Create a Request\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Name\"), React.createElement(Input, {\n    placeholder: \"Enter Your Name\",\n    onChangeText: function onChangeText(name) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        name: name\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"File Number\"), React.createElement(Input, {\n    placeholder: \"Enter File Number\",\n    onChangeText: function onChangeText(fileNumber) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        fileNumber: fileNumber\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Blood Type\"), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: request.bloodType,\n    minWidth: \"200\",\n    accessibilityLabel: \"Choose Blood Type\",\n    placeholder: \"Choose Blood Type\",\n    _selectedItem: {\n      bg: \"teal.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: \"5\"\n      })\n    },\n    mt: 1,\n    onValueChange: function onValueChange(bloodType) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        bloodType: bloodType\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"A+\",\n    value: \"A+\"\n  }), React.createElement(Select.Item, {\n    label: \"A-\",\n    value: \"A-\"\n  }), React.createElement(Select.Item, {\n    label: \"B+\",\n    value: \"B+\"\n  }), React.createElement(Select.Item, {\n    label: \"B-\",\n    value: \"B-\"\n  }), React.createElement(Select.Item, {\n    label: \"O+\",\n    value: \"O+\"\n  }), React.createElement(Select.Item, {\n    label: \"O-\",\n    value: \"O-\"\n  }), React.createElement(Select.Item, {\n    label: \"AB+\",\n    value: \"AB+\"\n  }), React.createElement(Select.Item, {\n    label: \"AB-\",\n    value: \"AB-\"\n  })))), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Age\"), React.createElement(Input, {\n    placeholder: \"Enter Your Age\",\n    onChangeText: function onChangeText(age) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        age: age\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Phone Number\"), React.createElement(Input, {\n    placeholder: \"Enter Phone Number\",\n    onChangeText: function onChangeText(phone) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        phone: phone\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Civil ID\"), React.createElement(Input, {\n    placeholder: \"Enter Civil ID\",\n    onChangeText: function onChangeText(civilId) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        civilId: civilId\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Gender\"), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: request.gender,\n    minWidth: \"200\",\n    accessibilityLabel: \"Choose Gender\",\n    placeholder: \"Choose Gender\",\n    _selectedItem: {\n      bg: \"teal.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: \"5\"\n      })\n    },\n    mt: 1,\n    onValueChange: function onValueChange(gender) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        gender: gender\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Male\",\n    value: \"male\"\n  }), React.createElement(Select.Item, {\n    label: \"Female\",\n    value: \"female\"\n  })))), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Description\"), React.createElement(Input, {\n    placeholder: \"Write Your Description\",\n    onChangeText: function onChangeText(description) {\n      return setUpdatedRequest(_objectSpread(_objectSpread({}, updatedRequest), {}, {\n        description: description\n      }));\n    }\n  })), React.createElement(HStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Switch, {\n    size: \"md\",\n    value: isEnable,\n    onValueChange: handleChange\n  }))), React.createElement(Modal.Footer, null, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    onPress: handleSubmit\n  }, \"Submit\"))))));\n};\n\nexport default observer(EditRequestModal);\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/aealaskar/Desktop/Development/FE_bloodDonation/components/Requests/EditRequestModal.js"],"names":["observer","Button","Modal","FormControl","Input","Center","NativeBaseProvider","Select","VStack","CheckIcon","useToast","HStack","React","useState","authStore","requestStore","EditRequestModal","request","console","log","_id","showModal","setShowModal","isEnable","setIsEnable","handleChange","setRequest","priority","name","fileNumber","bloodType","age","phone","civilId","gender","description","updatedRequest","setUpdatedRequest","toast","handleSubmit","editRequest","owner","user","bg","endIcon","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react\";\nimport {\n  Button,\n  Modal,\n  FormControl,\n  Input,\n  Center,\n  NativeBaseProvider,\n  Select,\n  VStack,\n  CheckIcon,\n  useToast,\n  HStack,\n} from \"native-base\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Switch } from \"react-native\";\nimport authStore from \"../../stores/authStore\";\nimport requestStore from \"../../stores/requestStore\";\n\nconst EditRequestModal = ({ request }) => {\n  console.log(request._id);\n  const [showModal, setShowModal] = useState(false);\n  const [isEnable, setIsEnable] = useState(false);\n  const handleChange = () => {\n    setIsEnable(!isEnable);\n    setRequest({ ...request, priority: isEnable ? \"Normal\" : \"Urgent\" });\n  };\n  const [updatedRequest, setUpdatedRequest] = useState({\n    name: request.name,\n    fileNumber: request.fileNumber,\n    bloodType: request.bloodType,\n    age: request.bloodType,\n    phone: request.phone,\n    civilId: request.civilId,\n    gender: request.gender,\n    description: request.description,\n    priority: request.priority,\n  });\n\n  const toast = useToast();\n\n  const handleSubmit = () => {\n    requestStore.editRequest(request._id, updatedRequest, toast);\n  };\n  return (\n    <>\n      {request.owner._id === authStore.user._id && (\n        <Button onPress={() => setShowModal(true)}>Update Request</Button>\n      )}\n\n      <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n        <Modal.Content maxWidth=\"400px\">\n          <Modal.CloseButton />\n          <Modal.Header>Create a Request</Modal.Header>\n          <Modal.Body>\n            <FormControl>\n              <FormControl.Label>Name</FormControl.Label>\n              <Input\n                placeholder=\"Enter Your Name\"\n                onChangeText={(name) =>\n                  setUpdatedRequest({ ...updatedRequest, name })\n                }\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>File Number</FormControl.Label>\n              <Input\n                placeholder=\"Enter File Number\"\n                onChangeText={(fileNumber) =>\n                  setUpdatedRequest({ ...updatedRequest, fileNumber })\n                }\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Blood Type</FormControl.Label>\n              <VStack alignItems=\"center\" space={4}>\n                <Select\n                  selectedValue={request.bloodType}\n                  minWidth=\"200\"\n                  accessibilityLabel=\"Choose Blood Type\"\n                  placeholder=\"Choose Blood Type\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon size=\"5\" />,\n                  }}\n                  mt={1}\n                  onValueChange={(bloodType) =>\n                    setUpdatedRequest({ ...updatedRequest, bloodType })\n                  }\n                >\n                  <Select.Item label=\"A+\" value=\"A+\" />\n                  <Select.Item label=\"A-\" value=\"A-\" />\n                  <Select.Item label=\"B+\" value=\"B+\" />\n                  <Select.Item label=\"B-\" value=\"B-\" />\n                  <Select.Item label=\"O+\" value=\"O+\" />\n                  <Select.Item label=\"O-\" value=\"O-\" />\n                  <Select.Item label=\"AB+\" value=\"AB+\" />\n                  <Select.Item label=\"AB-\" value=\"AB-\" />\n                </Select>\n              </VStack>\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Age</FormControl.Label>\n              <Input\n                placeholder=\"Enter Your Age\"\n                onChangeText={(age) =>\n                  setUpdatedRequest({ ...updatedRequest, age })\n                }\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Phone Number</FormControl.Label>\n              <Input\n                placeholder=\"Enter Phone Number\"\n                onChangeText={(phone) =>\n                  setUpdatedRequest({ ...updatedRequest, phone })\n                }\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Civil ID</FormControl.Label>\n              <Input\n                placeholder=\"Enter Civil ID\"\n                onChangeText={(civilId) =>\n                  setUpdatedRequest({ ...updatedRequest, civilId })\n                }\n              />\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Gender</FormControl.Label>\n              <VStack alignItems=\"center\" space={4}>\n                <Select\n                  selectedValue={request.gender}\n                  minWidth=\"200\"\n                  accessibilityLabel=\"Choose Gender\"\n                  placeholder=\"Choose Gender\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon size=\"5\" />,\n                  }}\n                  mt={1}\n                  onValueChange={(gender) =>\n                    setUpdatedRequest({ ...updatedRequest, gender })\n                  }\n                >\n                  <Select.Item label=\"Male\" value=\"male\" />\n                  <Select.Item label=\"Female\" value=\"female\" />\n                </Select>\n              </VStack>\n            </FormControl>\n            <FormControl mt=\"3\">\n              <FormControl.Label>Description</FormControl.Label>\n              <Input\n                placeholder=\"Write Your Description\"\n                onChangeText={(description) =>\n                  setUpdatedRequest({ ...updatedRequest, description })\n                }\n              />\n            </FormControl>\n            <HStack alignItems=\"center\" space={4}>\n              <Switch size=\"md\" value={isEnable} onValueChange={handleChange} />\n            </HStack>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button.Group space={2}>\n              <Button\n                variant=\"ghost\"\n                colorScheme=\"blueGray\"\n                onPress={() => {\n                  setShowModal(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button onPress={handleSubmit}>Submit</Button>\n            </Button.Group>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nexport default observer(EditRequestModal);\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}