{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"flex\", \"row\", \"column\", \"center\", \"middle\", \"left\", \"right\", \"card\", \"shadow\", \"color\", \"space\", \"style\", \"children\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as theme from \"./theme\";\n\nvar Block = function (_Component) {\n  _inherits(Block, _Component);\n\n  var _super = _createSuper(Block);\n\n  function Block() {\n    _classCallCheck(this, Block);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Block, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          flex = _this$props.flex,\n          row = _this$props.row,\n          column = _this$props.column,\n          center = _this$props.center,\n          middle = _this$props.middle,\n          left = _this$props.left,\n          right = _this$props.right,\n          card = _this$props.card,\n          shadow = _this$props.shadow,\n          color = _this$props.color,\n          space = _this$props.space,\n          style = _this$props.style,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      var blockStyles = [styles.block, flex && {\n        flex: flex\n      }, flex === false && {\n        flex: 0\n      }, row && styles.row, column && styles.column, center && styles.center, middle && styles.middle, left && styles.left, right && styles.right, card && styles.card, shadow && styles.shadow, space && {\n        justifyContent: \"space-\" + space\n      }, color && styles[color], color && !styles[color] && {\n        backgroundColor: color\n      }, style];\n      return React.createElement(View, _extends({\n        style: blockStyles\n      }, props), children);\n    }\n  }]);\n\n  return Block;\n}(Component);\n\nexport { Block as default };\nvar styles = StyleSheet.create({\n  block: {\n    flex: 1\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  column: {\n    flexDirection: \"column\"\n  },\n  card: {\n    borderRadius: theme.sizes.border\n  },\n  center: {\n    alignItems: \"center\"\n  },\n  middle: {\n    justifyContent: \"center\"\n  },\n  left: {\n    justifyContent: \"flex-start\"\n  },\n  right: {\n    justifyContent: \"flex-end\"\n  },\n  shadow: {\n    shadowColor: theme.colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 10\n  },\n  accent: {\n    backgroundColor: theme.colors.accent\n  },\n  primary: {\n    backgroundColor: theme.colors.primary\n  },\n  secondary: {\n    backgroundColor: theme.colors.secondary\n  },\n  tertiary: {\n    backgroundColor: theme.colors.tertiary\n  },\n  black: {\n    backgroundColor: theme.colors.black\n  },\n  white: {\n    backgroundColor: theme.colors.white\n  },\n  gray: {\n    backgroundColor: theme.colors.gray\n  },\n  gray2: {\n    backgroundColor: theme.colors.gray2\n  }\n});","map":{"version":3,"sources":["/Users/aealaskar/Desktop/Development/FE_bloodDonation/assets/Block.js"],"names":["React","Component","theme","Block","props","flex","row","column","center","middle","left","right","card","shadow","color","space","style","children","blockStyles","styles","block","justifyContent","backgroundColor","StyleSheet","create","flexDirection","borderRadius","sizes","border","alignItems","shadowColor","colors","black","shadowOffset","width","height","shadowOpacity","shadowRadius","accent","primary","secondary","tertiary","white","gray","gray2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nimport * as theme from \"./theme\";\n\nexport default class Block extends Component {\n  render() {\n    const {\n      flex,\n      row,\n      column,\n      center,\n      middle,\n      left,\n      right,\n      card,\n      shadow,\n      color,\n      space,\n      style,\n      children,\n      ...props\n    } = this.props;\n\n    const blockStyles = [\n      styles.block,\n      flex && { flex },\n      flex === false && { flex: 0 }, // reset / disable flex\n      row && styles.row,\n      column && styles.column,\n      center && styles.center,\n      middle && styles.middle,\n      left && styles.left,\n      right && styles.right,\n      card && styles.card,\n      shadow && styles.shadow,\n      space && { justifyContent: `space-${space}` },\n      color && styles[color], // predefined styles colors for backgroundColor\n      color && !styles[color] && { backgroundColor: color }, // custom backgroundColor\n      style, // rewrite predefined styles\n    ];\n\n    return (\n      <View style={blockStyles} {...props}>\n        {children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: \"row\",\n  },\n  column: {\n    flexDirection: \"column\",\n  },\n  card: {\n    borderRadius: theme.sizes.border,\n  },\n  center: {\n    alignItems: \"center\",\n  },\n  middle: {\n    justifyContent: \"center\",\n  },\n  left: {\n    justifyContent: \"flex-start\",\n  },\n  right: {\n    justifyContent: \"flex-end\",\n  },\n  shadow: {\n    shadowColor: theme.colors.black,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.1,\n    shadowRadius: 10,\n  },\n  accent: { backgroundColor: theme.colors.accent },\n  primary: { backgroundColor: theme.colors.primary },\n  secondary: { backgroundColor: theme.colors.secondary },\n  tertiary: { backgroundColor: theme.colors.tertiary },\n  black: { backgroundColor: theme.colors.black },\n  white: { backgroundColor: theme.colors.white },\n  gray: { backgroundColor: theme.colors.gray },\n  gray2: { backgroundColor: theme.colors.gray2 },\n});\n"]},"metadata":{},"sourceType":"module"}